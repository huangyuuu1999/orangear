apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data: 
  nginx.conf: |-
    user  nginx;
    worker_processes  auto;
    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;
    events {
        worker_connections  1024;
    }
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        keepalive_timeout  65;

        server {
            listen       80;
            listen  [::]:80;
            server_name  localhost;

            location / {
                root   /usr/share/nginx/html;
                index  index.html index.htm;
            }

            location ~ /api {
                proxy_pass  http://43.139.176.247:30011;
            }
            error_page   500 502 503 504  /50x.html;
            location = /50x.html {
                root   /usr/share/nginx/html;
            }
        }
    }

---
apiVersion: v1
kind: Service
metadata:
  name: orangear-frontend-svc
spec:
  selector:
    app: orangear-app
  type: NodePort
  ports:
  - port: 80
    nodePort: 30010
    targetPort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orangear
spec:
  selector:
    matchLabels:
      app: orangear-app
  replicas: 2
  template:
    metadata:
      labels:
        app: orangear-app
    spec:
      containers:
      - name: orangear-container
        image: 43.139.176.247/fruit_buckets/orangear:latest
        imagePullPolicy: Always
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      imagePullSecrets:
        - name: harbor-secret
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oranget
spec:
  selector:
     matchLabels:
      app: oranget-app
  replicas: 2
  template:
    metadata:
      labels:
        app: oranget-app
    spec:
      containers:
      - name: oranget-container
        image: 43.139.176.247/fruit_buckets/oranget:latest
        imagePullPolicy: Always
      imagePullSecrets:
        - name: harbor-secret
---
apiVersion: v1
kind: Service
metadata:
  name: oranget-backend-svc
spec:
  selector:
    app: oranget-app
  type: NodePort
  ports:
  - port: 8080
    nodePort: 30011
    targetPort: 8080

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql-app
  template:
    metadata:
      labels:
        app: mysql-app
    spec:
      containers:
        - name: mysql-container
          image: 43.139.176.247/fruit_buckets/mysql:5.7
          imagePullPolicy: Always
          env:
          - name: "MYSQL_ROOT_PASSWORD"
            value: "123456"
          resources:
            limits:
              cpu: "1"
              memory: "0.5Gi"
      imagePullSecrets:
        - name: harbor-secret
          # volumeMounts:
          #   - name: config
          #     mountPath: /etc/mysql/conf.d/mysql.cnf
          #     readOnly: true
          #     subPath: mysql.cnf
          #   - name: mysql-data
          #     mountPath: /var/lib/mysql
      # volumes:
      #   - name: config
      #     configMap:
      #       defaultMode: 0644
      #       name: mysql-config
      #   - name: mysql-data
      #     hostPath:
      #       path: $(mysql_data_dir)

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-svc
spec:
  selector:
    app: mysql-app
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306


apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  selector:
    matchLabels:
      app: redis-app
  template:
    metadata:
      labels:
        app: redis-app
    spec:
      containers:
        - name: redis-container
          image: 43.139.176.247/fruit_buckets/redis:latest
          imagePullPolicy: Always
          command: ["redis-server", "--requirepass", "123456"]
          resources:
            limits:
              cpu: "1"
              memory: "1Gi"
      imagePullSecrets:
      - name: harbor-secret

---
apiVersion: v1
kind: Service
metadata:
  name: redis-svc
spec:
  selector:
    app: redis-app
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
